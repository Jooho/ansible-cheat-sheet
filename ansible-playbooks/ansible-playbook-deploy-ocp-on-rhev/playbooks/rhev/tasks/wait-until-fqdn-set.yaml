# Watiting until fqdn is set
- name: Gather Master VMs info
  ovirt_vms_facts:
    pattern: "name={{item.vm.name}}"
    auth:
      username: "{{rhev.id}}"
      password: "{{rhev.pw}}"
      url: "{{rhev.api_url}}"
      ca_file: "{{rhev.ca_file}}"
  with_items: "{{created_master_vms_info.results}}"
  register: vms_info
  until: vms_info.ansible_facts.ovirt_vms[0].fqdn is defined
  ignore_errors: yes
  retries: 60
  delay: 10
  when: (master_node_vms is defined and master_node_vms > 0)

- name: Gather Infra VMs info
  ovirt_vms_facts:
    pattern: "name={{item.vm.name}}"
    auth:
      username: "{{rhev.id}}"
      password: "{{rhev.pw}}"
      url: "{{rhev.api_url}}"
      ca_file: "{{rhev.ca_file}}"
  with_items:
    - "{{created_infra_node_vms_info.results}}"
  when: (infra_node_vms is defined and infra_node_vms > 0) and (deploy_type=='ocp_cluster')
  register: vms_info
  until: vms_info.ansible_facts.ovirt_vms[0].fqdn is defined
  ignore_errors: yes
  retries: 60
  delay: 10

- name: Gather ETCD VMs info
  ovirt_vms_facts:
    pattern: "name={{item.vm.name}}"
    auth:
      username: "{{rhev.id}}"
      password: "{{rhev.pw}}"
      url: "{{rhev.api_url}}"
      ca_file: "{{rhev.ca_file}}"
  with_items: "{{created_etcd_node_vms_info.results}}"
  register: etcd_vms_info
  until: etcd_vms_info.ansible_facts.ovirt_vms[0].fqdn is defined
  ignore_errors: yes
  retries: 60
  delay: 10
  when: etcd_node_vms is defined and etcd_node_vms > 0 and deploy_type == 'ocp_cluster'

- name: Gather LB VM info
  ovirt_vms_facts:
    pattern: "name={{created_lb_node_vm_info.vm.name}}"
    auth:
      username: "{{rhev.id}}"
      password: "{{rhev.pw}}"
      url: "{{rhev.api_url}}"
      ca_file: "{{rhev.ca_file}}"
  register: lb_vms_info
  when: master_node_vms|int > 1
  until: lb_vms_info.ansible_facts.ovirt_vms[0].fqdn is defined
  ignore_errors: yes
  retries: 60
  delay: 10

- name: Scaling - Gather New Infra VMs info
  ovirt_vms_facts:
    pattern: "name={{item.vm.name}}"
    auth:
      username: "{{rhev.id}}"
      password: "{{rhev.pw}}"
      url: "{{rhev.api_url}}"
      ca_file: "{{rhev.ca_file}}"
  with_items:
    - "{{created_new_node_vms_info.results}}"
  when: (infra_node_vms is defined and infra_node_vms > 0) and (deploy_type=='infra')
  register: vms_info
  until: vms_info.ansible_facts.ovirt_vms[0].fqdn is defined
  ignore_errors: yes
  retries: 60
  delay: 10

- name: Scaling - Gather new App VMs info
  ovirt_vms_facts:
    pattern: "name={{item.vm.name}}"
    auth:
      username: "{{rhev.id}}"
      password: "{{rhev.pw}}"
      url: "{{rhev.api_url}}"
      ca_file: "{{rhev.ca_file}}"
  with_items:
    - "{{created_new_node_vms_info.results}}"
  register: vms_info
  until: vms_info.ansible_facts.ovirt_vms[0].fqdn is defined
  ignore_errors: yes
  retries: 60
  delay: 10
  when: app_node_vms is defined and app_node_vms > 0 and deploy_type=='app'


- name: GB - Gather new GB Infra VMs info
  ovirt_vms_facts:
    pattern: "name={{item.vm.name}}"
    auth:
      username: "{{rhev.id}}"
      password: "{{rhev.pw}}"
      url: "{{rhev.api_url}}"
      ca_file: "{{rhev.ca_file}}"
  with_items:
    - "{{created_infra_node_vms_info.results}}"
  register: vms_info
  until: vms_info.ansible_facts.ovirt_vms[0].fqdn is defined
  ignore_errors: yes
  retries: 60
  delay: 10
  when: deploy_type == 'bg_upgrade' and target == 'node'


- name: GB - Gather new GB App VMs info
  ovirt_vms_facts:
    pattern: "name={{item.vm.name}}"
    auth:
      username: "{{rhev.id}}"
      password: "{{rhev.pw}}"
      url: "{{rhev.api_url}}"
      ca_file: "{{rhev.ca_file}}"
  with_items:
    - "{{created_app_node_vms_info.results}}"
  register: vms_info
  until: vms_info.ansible_facts.ovirt_vms[0].fqdn is defined
  ignore_errors: yes
  retries: 60
  delay: 10
  when: deploy_type == 'bg_upgrade' and target == 'node'


