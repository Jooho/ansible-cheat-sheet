---
- hosts: localhost
  pre_tasks:
    - include: ./validate.yaml

    - set_fact:
        ansible_controller_ip: "{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}"
        new_vms: "{{ instances | default(1) }}"

    - set_fact:    
        retry_scale: true
      when: "'tag_Name_new' + cluster_tag + '_infra_node_vms' in groups or 'tag_Name_new' + cluster_tag + '_app_node_vms' in groups"

    - set_fact:    
        retry_scale: false
      when: "not ('tag_Name_new' + cluster_tag + '_infra_node_vms' in groups or 'tag_Name_new' + cluster_tag + '_app_node_vms' in groups)"

#    - name: Gather Infra/App VMs info
#      ovirt_vms_facts:
#        pattern: "{{prefix_vm}}*{{cluster_tag}}*{{deploy_type}}"
#        auth:
#          username: "{{rhev.id}}"
#          password: "{{rhev.pw}}"
#          url: "{{rhev.api_url}}"
#          ca_file: "{{rhev.ca_file}}"
#      register: vms_info
#      until: vms_info.ansible_facts.ovirt_vms[0].fqdn is defined
#      ignore_errors: yes
#      retries: 60
#      delay: 10

    - name: Create New RHEV VM
      include: ./scale-create-vms.yaml
      when: not retry_scale|bool

    - name: Refresh inventory to ensure new instaces exist in inventory
      meta: refresh_inventory
      when: not retry_scale|bool

    - name: Update groups
      include: ../tasks/generate-host-groups.yaml

    - name: generate host file
      include_role:
        name: generate_hosts_file

    - name: Install interim dns
      include_role:
        name: interim_dns
      when: interim_dns.install

  roles:
    - role: ssh-id-copy
      ssh_id_copy_target: cluster
#    - role: ssh-id-copy
#      ssh_id_copy_target: new_nodes

- name: RHSM register subscription
  hosts: new_nodes
  gather_facts: false
  roles:
    - role: subscription_attach
      pool_name: "{{subs.broker_sub_pool |default('false')}}"
      pool_id: "{{subs.broker_sub_pool_id|default('false')}}"
      when: inventory_hostname in groups['broker_sub_nodes'] 

    - role: subscription_attach
      pool_name: "{{subs.node_sub_pool |default(false)}}"
      pool_id: "{{subs.node_sub_pool_id|default(false)}}"
      when: inventory_hostname in groups['node_sub_nodes'] 
     

- name: Install OCP Host Pre-Requisites
  hosts: new_nodes
  roles:
    - role: openshift-prerequisites
      node_type: ocp-host 

- name: Scaling Out OCP Cluster
  include: /usr/share/ansible/openshift-ansible/playbooks/byo/openshift-node/scaleup.yml

- hosts: localhost
  tasks:
     - block:
         - name: Add New Nodes to Node Tag after scaled out
           ovirt_tags:
             auth:
               username: "{{rhev.id}}"
               password: "{{rhev.pw}}"
               url: "{{rhev.api_url}}"
               ca_file: "{{rhev.ca_file}}"
             name: "{{cluster_tag}}_{{target}}_node_vms"
             state: attached
             vms: "{{ item }}"
           with_items:
             - "{{ groups['tag_Name_new_' + cluster_tag + '_' + target + '_node_vms'] }}"

         - name: Delete New Nodes from New Node Tag after scaled out
           ovirt_tags:
             auth:
               username: "{{rhev.id}}"
               password: "{{rhev.pw}}"
               url: "{{rhev.api_url}}"
               ca_file: "{{rhev.ca_file}}"
             name: "new_{{cluster_tag}}_{{target}}_node_vms"
             state: absent
             vms: "{{ item }}"
           with_items:
             - "{{ groups['tag_Name_new_' + cluster_tag + '_' + target + '_node_vms'] }}"
  
- hosts: localhost
  tasks:
     - block:
        - name: Remove New Tag(new_tag_Name_xxx) after scaled out
          ovirt_tags:
            auth:
              username: "{{rhev.id}}"
              password: "{{rhev.pw}}"
              url: "{{rhev.api_url}}"
              ca_file: "{{rhev.ca_file}}"
            name: "new_{{cluster_tag}}_{{target}}_node_vms"
            state: absent
